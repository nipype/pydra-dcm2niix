#This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# For deployment, it will be necessary to create a PyPI API token and store it as a secret
# https://docs.github.com/en/actions/reference/encrypted-secrets

name: Python package

# Set once
env:
  SUBPACKAGE: dcm2niix

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Install task package
      run: |
        pip install ".[test]"
    - name: Test with pytest
      run: |
        pytest -sv --cov pydra.tasks.$SUBPACKAGE --cov-report xml
    - uses: codecov/codecov-action@v1
      if: ${{ always() }}

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Unset header
      # checkout@v2 adds a header that makes branch protection report errors
      # because the Github action bot is not a collaborator on the repo
      run: git config --local --unset http.https://github.com/.extraheader
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'
    - name: Install build tools
      run: python3 -m pip install --break-system-packages build twine
    - name: Build source and wheel distributions
      run: python3 -m build .
    - name: Check distributions
      run: twine check dist/*
    - uses: actions/upload-artifact@v4
      with:
        name: built
        path: dist
    # Deploy on tags if PYPI_API_TOKEN is defined in the repository secrets.
    # Secrets are not accessible in the if: condition [0], so set an output variable [1]
    # [0] https://github.community/t/16928
    # [1] https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
    - name: Check for PyPI token on tag
      id: deployable
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        PYPI_API_TOKEN: "${{ secrets.PYPI_API_TOKEN }}"
      run: if [ -n "$PYPI_API_TOKEN" ]; then echo ::set-output name=DEPLOY::true; fi
    - name: Upload to PyPI
      if: steps.deployable.outputs.DEPLOY
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29  # v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
